{"version":3,"file":"static/js/976.e6f96740.chunk.js","mappings":"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","sources":["webpack://social-app/./src/Components/Dialogs/Dialogs.module.scss?d5e3","webpack://social-app/./src/Components/Dialogs/Message/Message.module.scss?61c0","Components/Dialogs/Message/Message.tsx","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/DialogFormTextarea.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","HOCS/withAuthRedirect.tsx","Components/Dialogs/DialogsContainer.tsx","Components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__s+UkA\",\"dialogs__users\":\"Dialogs_dialogs__users__xZm0e\",\"dialogs__messages\":\"Dialogs_dialogs__messages__hBk7s\",\"formBlock\":\"Dialogs_formBlock__8j06i\",\"button\":\"Dialogs_button__cIbj2\",\"svg-wrapper\":\"Dialogs_svg-wrapper__09Z9j\",\"fly-1\":\"Dialogs_fly-1__BLciX\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__oadJh\"};","import React from 'react';\r\nimport cn from './Message.module.scss';\r\n\r\ntype MessagePropsType = {\r\n    message: string;\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = ({message}) => {\r\n    return (\r\n        <div className={cn.message}>{message}</div>\r\n    );\r\n}","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItemPropsType = {\r\n    name: string;\r\n    id: number\r\n}\r\n\r\nexport const DialogItem: React.FC<DialogItemPropsType> = ({id, name}) => {\r\n    // const path = `/dialogs/${id}`\r\n    const path = `${id}`\r\n\r\n    return (\r\n        <li><NavLink to={path}>{name}</NavLink></li>\r\n    );\r\n}","import React from 'react';\r\nimport {Field, Form, Formik, FormikHelpers} from 'formik';\r\nimport s from './Dialogs.module.scss'\r\ntype DialogFormTextareaPropsType = {\r\n    addMessage: (text: string) => void\r\n}\r\n\r\ntype InitialValues = {\r\n    message: string\r\n}\r\n\r\nexport const DialogFormTextarea: React.FC<DialogFormTextareaPropsType> = (props) => {\r\n    // const formik = useFormik({\r\n    //     initialValues: {\r\n    //         message: ''\r\n    //     },\r\n    //     onSubmit: (values, {resetForm}) => {\r\n    //         props.addMessage(values.message)\r\n    //         resetForm({})\r\n    //     }\r\n    // })\r\n\r\n    const initialValues: InitialValues = {\r\n        message: ''\r\n    }\r\n\r\n    const onSubmit = (values: InitialValues, {resetForm}: FormikHelpers<InitialValues>) => {\r\n        props.addMessage(values.message)\r\n        // resetForm({})\r\n        resetForm({values: {message: ''}})\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n            <Form className={s.formBlock}>\r\n                <label htmlFor={'message'}>\r\n                    <Field name={'message'} id={'message'} placeholder={'Add your message'} as={'textarea'}/>\r\n                </label>\r\n                <button type={'submit'} className={s.button}>\r\n                        <div className=\"svg-wrapper-1\">\r\n                            <div className=\"svg-wrapper\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                    <path fill=\"none\" d=\"M0 0h24v24H0z\"></path>\r\n                                    <path fill=\"currentColor\"\r\n                                          d=\"M1.946 9.315c-.522-.174-.527-.455.01-.634l19.087-6.362c.529-.176.832.12.684.638l-5.454 19.086c-.15.529-.455.547-.679.045L12 14l6-8-8 6-8.054-2.685z\"></path>\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                        <span>Send</span>\r\n                </button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {AppStateType} from '../redux/reducers';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({isAuth: state.auth.isAuth})\r\n\r\nexport const withAuthRedirect = <P extends object>(Component: React.ComponentType<P>): React.FC<P> => {\r\n\r\n    const WithRedirect: React.FC<MapStatePropsType> = ({isAuth, ...props}) => {\r\n\r\n        if (!isAuth) return <Navigate to={'/login'}/>\r\n        return (\r\n            <Component {...props as P} />\r\n        )\r\n    }\r\n    return connect(mapStateToProps)(WithRedirect)\r\n}","// import React from 'react';\r\n\r\nimport {addMessageAC, DialogType, MessageType} from '../../redux/reducers/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {compose, Dispatch} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/reducers';\r\nimport {withAuthRedirect} from '../../HOCS/withAuthRedirect';\r\nimport React from 'react';\r\n\r\ntype MapStatePropsType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addMessage: (messageText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addMessage: (messageText: string) => {\r\n            dispatch(addMessageAC(messageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, mapDispatchToProps)\r\n)\r\n(Dialogs)\r\n\r\n","import React from 'react';\r\nimport cn from './Dialogs.module.scss'\r\nimport {Message} from './Message/Message';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {DialogType, MessageType} from '../../redux/reducers/dialogs-reducer';\r\nimport {DialogFormTextarea} from './DialogFormTextarea';\r\n\r\ntype DialogsPropsType = {\r\n    addMessage: () => void;\r\n    dialogs: Array<DialogType>;\r\n    messages: Array<MessageType>;\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    const dialogsEl = props.dialogs.map(dialog => <DialogItem key={dialog.id} {...dialog} />)\r\n    const messagesEl = props.messages.map(message => <Message key={message.id} message={message.message}/>)\r\n\r\n    return (\r\n        <div className={cn.dialogs}>\r\n            <div className={cn.dialogs__users}>\r\n                <ul>\r\n                    {dialogsEl}\r\n                </ul>\r\n            </div>\r\n            <div className={cn.dialogs__messages}>\r\n                <div>{messagesEl}</div>\r\n                <div>\r\n\r\n                    {/*//TODO вариант форму родителем сделать; дети (children) для сборки формы*/}\r\n                    <DialogFormTextarea addMessage={props.addMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":["Message","message","className","cn","DialogItem","id","name","path","to","DialogFormTextarea","props","initialValues","onSubmit","values","resetForm","addMessage","s","htmlFor","placeholder","as","type","xmlns","viewBox","width","height","fill","d","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToProps","state","isAuth","auth","DialogsContainer","compose","Component","connect","dialogs","dialogsPage","messages","dispatch","messageText","addMessageAC","dialogsEl","map","dialog","messagesEl"],"sourceRoot":""}